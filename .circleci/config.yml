name: Build and Deploy
on:
  push:
    branches:
      - master
      - development
version: 2
jobs:
  stage:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Echo env var for dev-context
          command:  |
           echo $GATSBY_apiKey
           echo $GATSBY_appId
           echo $GATSBY_authDomain
           echo $GATSBY_measurementId
           echo $GATSBY_messagingSenderId
           echo $GATSBY_projectId
           echo $GATSBY_STRIPE_PUBLISHABLE_KEY
           echo GATSBY_STRIPE_SECRET_KEY
        # Download and cache dependencies
      - restore_cache:
         keys:
           - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build
          command: yarn build
      - run:
          name: Firebase Deploy
          command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_TOKEN" --only hosting:development    
   
  #deploy:
    #docker:
      #- image: circleci/node:12
    #steps:
      #- checkout
        # Download and cache dependencies
      #- restore_cache:
         #keys:
           #- v1-dependencies-{{ checksum "package.json" }}
            #- v1-dependencies-
      #- run:
          #name: Install Dependencies
          #command: npm install
     # - save_cache:
        #  key: v1-npm-deps-{{ checksum "package-lock.json" }}
       #   paths:
       #     - ./node_modules
     # - run:
         # name: Build
       #   command: yarn build
      #- run:
        #  name: Firebase Deploy
        #  command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_TOKEN" --only hosting:production


workflows:
  version: 2
  build_stage_approve_deploy:
    jobs:
      - stage:
         context: 
          - dev-context
      - hold:
          type: approval
          requires:
            - stage
        
      #- deploy:
         # requires:
            #- hold
